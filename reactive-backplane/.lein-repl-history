(clojuredocs 'assoc)
(clojuredocs "assoc")
(user/clojuredocs "assoc")
(doc assoc)
(clojuredocs assoc)
(clojuredocs require)
(clojuredoc doseq)
(clojuredocs doseq)
(doc prn)
(doc println)
(doc pr)
(map list {:1 1 :2 2} {:3 3 :4 4})
{:1 1}
{:4 4}
[:4 4]
(map pr {:1 1})
(doseq [x {:1 1}] (pr x))
(doseq [x {:1 1}] (prn x))
(doseq [x {:1 1 :2 2}] (prn x))
(map pr {:1 1 :2 2})
(map prn {:1 1 :2 2})
(map str {:1 1 :2 2})
(doc :use)
(doc use)
(doc refer)
(doc require)
(java.util.Date.)
(format "[%1 %2]" (java.util.Date))
(format "[%1 %2]" 1 2)
(format "[%1$ti %2$ti]" 1 2)
(format "[%1$tD %2$tD]" 1 2)
(doc format)
(doc javadoc)
(javadoc java.lang.String.format)
(javadoc java.lang.String)
(reactive-backplane/emit)
emit
clojuredocs
(clojuredocs dotimes)
(delay 5)
(let [x (delay 5)] @x)
(type (delay 5))
(clojuredocs delay)
